diff --git a/Makefile b/Makefile
index 09d790c..ffc4684 100644
--- a/Makefile
+++ b/Makefile
@@ -181,6 +181,8 @@ UPROGS=\
 	_usertests\
 	_wc\
 	_zombie\
+    _tryhello\
+    _lseek\
 
 fs.img: mkfs README $(UPROGS)
 	./mkfs fs.img README $(UPROGS)
diff --git a/fcntl.h b/fcntl.h
index d565483..6b4a97b 100644
--- a/fcntl.h
+++ b/fcntl.h
@@ -2,3 +2,6 @@
 #define O_WRONLY  0x001
 #define O_RDWR    0x002
 #define O_CREATE  0x200
+#define SEEK_SET  0x300
+#define SEEK_CUR  0x400
+#define SEEK_END  0x500
diff --git a/lseek.c b/lseek.c
new file mode 100644
index 0000000..c9fabd9
--- /dev/null
+++ b/lseek.c
@@ -0,0 +1,93 @@
+#include "param.h"
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+#include "fs.h"
+#include "fcntl.h"
+#include "syscall.h"
+#include "traps.h"
+#include "memlayout.h"
+#include "spinlock.h"
+
+
+int main(int argc,char* argv[]){
+    int fd;
+    int fd1;
+    int prev_offset=0;
+      
+   if(argc<2){
+        printf(1,"Please enter a valid file offset\n");
+        exit();
+    }
+    int offset=atoi(argv[1]);
+    fd=open("file.txt",O_CREATE|O_WRONLY);
+
+    char* str="In a fast-changing world, the fate of the country can be moulded through our ability to harness modern science and technology, which is a road to boost the development programs of the country. Rapid technological advances have reduced the dependency on natural resources or the factors in proportion to it. Man is performing precisely by machines with a regular improvement in his work because of quick technological changes by virtue of scientific advancement all around the world. We have accomplished desired scientific and technological advancement and have succeeded in boosting various important international activities like information and telecommunication, television, meteorological services, medical advancement, industrial development, nuclear research, Space Research Oceanographic Research, etc.";
+    write(fd,str,strlen(str));
+    printf(1,"Content of file: \n");
+     printf(1,"_____________________\n");
+    printf(1,str);
+    printf(1,"\n");
+     printf(1,"******************************************************************************************\n");
+   
+
+    fd1=open("file.txt",O_RDONLY);
+  
+    int ans=lseek(fd,offset,SEEK_SET);
+    char* buf;
+    
+    if(ans==offset){
+         prev_offset=ans;
+         buf=(char*)malloc(sizeof(char)*ans);
+        
+         read(fd1,buf,ans);
+       
+         printf(1,"Testing seek set\n");
+         printf(1,buf);
+         printf(1,"\n");
+        lseek(fd1,ans,SEEK_SET);
+
+        
+
+    }
+    printf(1,"*******************************************************************************************\n");
+    ans=lseek(fd,offset,SEEK_CUR);
+    if(ans==prev_offset+offset){
+       buf=(char*)malloc(sizeof(char)*offset);
+        
+         read(fd1,buf,offset);
+       
+         printf(1,"Testing seek cur\n");
+         printf(1,buf);
+         printf(1,"\n");
+
+
+    }
+    printf(1,"******************************************************************************************\n");
+    int offset1=-1*offset;
+    ans=lseek(fd,offset1,SEEK_END);
+    
+    if(ans==strlen(str)+offset1){
+          
+         lseek(fd1,ans,SEEK_SET);
+          buf=(char*)malloc(sizeof(char)*offset);
+        
+         read(fd1,buf,offset);
+       
+         printf(1,"Testing seek end\n");
+         printf(1,buf);
+         printf(1,"\n");
+    }
+    printf(1,"*******************************************************************************************\n");
+
+   
+    close(fd);
+    close(fd1);
+   
+
+    
+   
+
+    exit();
+
+}
diff --git a/syscall.c b/syscall.c
index ee85261..0ed9bf3 100644
--- a/syscall.c
+++ b/syscall.c
@@ -103,7 +103,8 @@ extern int sys_unlink(void);
 extern int sys_wait(void);
 extern int sys_write(void);
 extern int sys_uptime(void);
-
+extern int sys_hello(void);
+extern int sys_lseek(void);
 static int (*syscalls[])(void) = {
 [SYS_fork]    sys_fork,
 [SYS_exit]    sys_exit,
@@ -126,6 +127,8 @@ static int (*syscalls[])(void) = {
 [SYS_link]    sys_link,
 [SYS_mkdir]   sys_mkdir,
 [SYS_close]   sys_close,
+[SYS_hello]   sys_hello,
+[SYS_lseek]   sys_lseek,
 };
 
 void
diff --git a/syscall.h b/syscall.h
index bc5f356..5fc3cbe 100644
--- a/syscall.h
+++ b/syscall.h
@@ -20,3 +20,5 @@
 #define SYS_link   19
 #define SYS_mkdir  20
 #define SYS_close  21
+#define SYS_hello  22
+#define SYS_lseek  23
diff --git a/sysfile.c b/sysfile.c
index bfe61b7..3c22c4f 100644
--- a/sysfile.c
+++ b/sysfile.c
@@ -442,3 +442,37 @@ sys_pipe(void)
   fd[1] = fd1;
   return 0;
 }
+int sys_hello(void){
+    cprintf("Hello World\n");
+    return 0;
+}
+
+int sys_lseek(void){
+     
+     int pos;
+     struct file *fp;
+     int mode;
+     if(argfd(0,0,&fp)<0 || argint(1,&pos)<0 || argint(2,&mode)<0){
+          return -1;
+}
+else{
+
+      switch(mode){
+        case SEEK_SET:
+             fp->off=pos;
+             break;
+        case SEEK_CUR:
+             fp->off=fp->off+pos;
+             break;          
+        case SEEK_END:
+             fp->off=fp->ip->size;
+             fp->off=fp->off+pos;
+             break;
+        default:
+            fp->off = -1;          
+            break;
+     }
+     return fp->off;
+}
+}
+
diff --git a/tryhello.c b/tryhello.c
new file mode 100644
index 0000000..18bcd62
--- /dev/null
+++ b/tryhello.c
@@ -0,0 +1,9 @@
+#include "types.h"
+#include "stat.h"
+#include "user.h"
+#include "fs.h"
+
+int main(int argc,char* argv[]){
+     hello();
+     exit();
+}
diff --git a/user.h b/user.h
index 4f99c52..819da84 100644
--- a/user.h
+++ b/user.h
@@ -23,6 +23,8 @@ int getpid(void);
 char* sbrk(int);
 int sleep(int);
 int uptime(void);
+int hello(void);
+int lseek(int,int,int);
 
 // ulib.c
 int stat(const char*, struct stat*);
diff --git a/usys.S b/usys.S
index 8bfd8a1..f9d0ca9 100644
--- a/usys.S
+++ b/usys.S
@@ -29,3 +29,5 @@ SYSCALL(getpid)
 SYSCALL(sbrk)
 SYSCALL(sleep)
 SYSCALL(uptime)
+SYSCALL(hello)
+SYSCALL(lseek)
